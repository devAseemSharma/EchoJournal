package com.androidace.echojournal.ui.theme

import androidx.compose.ui.graphics.Color
import com.androidace.echojournal.ui.mood.model.Mood

val primaryLight = Color(0xFF00419C)
val onPrimaryLight = Color(0xFFFFFFFF)
val primaryContainerLight = Color(0xFF1F70F5)
val onPrimaryContainerLight = Color(0xFFEEF0FF)
val secondaryLight = Color(0xFF3B4663)
val onSecondaryLight = Color(0xFFFFFFFF)
val secondaryContainerLight = Color(0xFF6B7796)
val onSecondaryContainerLight = Color(0xFFFBF9FF)
val tertiaryLight = Color(0xFF54106B)
val onTertiaryLight = Color(0xFFFFFFFF)
val tertiaryContainerLight = Color(0xFF7A3991)
val onTertiaryContainerLight = Color(0xFFFFF7FB)
val errorLight = Color(0xFFBA1A1A)
val onErrorLight = Color(0xFFFFFFFF)
val errorContainerLight = Color(0xFFFFEDEC)
val onErrorContainerLight = Color(0xFF680014)
val backgroundLight = Color(0xFFFCFDFE)
val onBackgroundLight = Color(0xFF1A1B21)
val surfaceLight = Color(0xFFFFFFFF)
val onSurfaceLight = Color(0xFF191A20)
val surfaceVariantLight = Color(0xFFE1E2EC)
val onSurfaceVariantLight = Color(0xFF40434F)
val outlineLight = Color(0xFF6C7085)
val outlineVariantLight = Color(0xFFC1C3CE)
val scrimLight = Color(0xFF000000)
val inverseSurfaceLight = Color(0xFF2E3036)
val inverseOnSurfaceLight = Color(0xFFEEF0FF)
val inversePrimaryLight = Color(0xFFBAC6E9)
val surfaceDimLight = Color(0xFFD9D9E2)
val surfaceBrightLight = Color(0xFFFAF8FF)
val surfaceContainerLowestLight = Color(0xFFFFFFFF)
val surfaceContainerLowLight = Color(0xFFF3F3FB)
val surfaceContainerLight = Color(0xFFEDEDF5)
val surfaceContainerHighLight = Color(0xFFE8E7F0)
val surfaceContainerHighestLight = Color(0xFFE2E2EA)

val primaryLightMediumContrast = Color(0xFF002F76)
val onPrimaryLightMediumContrast = Color(0xFFFFFFFF)
val primaryContainerLightMediumContrast = Color(0xFF2051AC)
val onPrimaryContainerLightMediumContrast = Color(0xFFFFFFFF)
val secondaryLightMediumContrast = Color(0xFF28334F)
val onSecondaryLightMediumContrast = Color(0xFFFFFFFF)
val secondaryContainerLightMediumContrast = Color(0xFF4A5573)
val onSecondaryContainerLightMediumContrast = Color(0xFFFFFFFF)
val tertiaryLightMediumContrast = Color(0xFF54106B)
val onTertiaryLightMediumContrast = Color(0xFFFFFFFF)
val tertiaryContainerLightMediumContrast = Color(0xFF7A3991)
val onTertiaryContainerLightMediumContrast = Color(0xFFFFFFFF)
val errorLightMediumContrast = Color(0xFF8C0009)
val onErrorLightMediumContrast = Color(0xFFFFFFFF)
val errorContainerLightMediumContrast = Color(0xFFDA342E)
val onErrorContainerLightMediumContrast = Color(0xFFFFFFFF)
val backgroundLightMediumContrast = Color(0xFFFAF8FF)
val onBackgroundLightMediumContrast = Color(0xFF1A1B21)
val surfaceLightMediumContrast = Color(0xFFFAF8FF)
val onSurfaceLightMediumContrast = Color(0xFF1A1B21)
val surfaceVariantLightMediumContrast = Color(0xFFDFE2F0)
val onSurfaceVariantLightMediumContrast = Color(0xFF3F434E)
val outlineLightMediumContrast = Color(0xFF5B5F6B)
val outlineVariantLightMediumContrast = Color(0xFF777A87)
val scrimLightMediumContrast = Color(0xFF000000)
val inverseSurfaceLightMediumContrast = Color(0xFF2E3036)
val inverseOnSurfaceLightMediumContrast = Color(0xFFF0F0F8)
val inversePrimaryLightMediumContrast = Color(0xFFB0C6FF)
val surfaceDimLightMediumContrast = Color(0xFFD9D9E2)
val surfaceBrightLightMediumContrast = Color(0xFFFAF8FF)
val surfaceContainerLowestLightMediumContrast = Color(0xFFFFFFFF)
val surfaceContainerLowLightMediumContrast = Color(0xFFF3F3FB)
val surfaceContainerLightMediumContrast = Color(0xFFEDEDF5)
val surfaceContainerHighLightMediumContrast = Color(0xFFE8E7F0)
val surfaceContainerHighestLightMediumContrast = Color(0xFFE2E2EA)

val primaryLightHighContrast = Color(0xFF001F53)
val onPrimaryLightHighContrast = Color(0xFFFFFFFF)
val primaryContainerLightHighContrast = Color(0xFF003E95)
val onPrimaryContainerLightHighContrast = Color(0xFFFFFFFF)
val secondaryLightHighContrast = Color(0xFF16213C)
val onSecondaryLightHighContrast = Color(0xFFFFFFFF)
val secondaryContainerLightHighContrast = Color(0xFF37425F)
val onSecondaryContainerLightHighContrast = Color(0xFFFFFFFF)
val tertiaryLightHighContrast = Color(0xFF3D0052)
val onTertiaryLightHighContrast = Color(0xFFFFFFFF)
val tertiaryContainerLightHighContrast = Color(0xFF66247D)
val onTertiaryContainerLightHighContrast = Color(0xFFFFFFFF)
val errorLightHighContrast = Color(0xFF4E0002)
val onErrorLightHighContrast = Color(0xFFFFFFFF)
val errorContainerLightHighContrast = Color(0xFF8C0009)
val onErrorContainerLightHighContrast = Color(0xFFFFFFFF)
val backgroundLightHighContrast = Color(0xFFFAF8FF)
val onBackgroundLightHighContrast = Color(0xFF1A1B21)
val surfaceLightHighContrast = Color(0xFFFAF8FF)
val onSurfaceLightHighContrast = Color(0xFF000000)
val surfaceVariantLightHighContrast = Color(0xFFDFE2F0)
val onSurfaceVariantLightHighContrast = Color(0xFF20242E)
val outlineLightHighContrast = Color(0xFF3F434E)
val outlineVariantLightHighContrast = Color(0xFF3F434E)
val scrimLightHighContrast = Color(0xFF000000)
val inverseSurfaceLightHighContrast = Color(0xFF2E3036)
val inverseOnSurfaceLightHighContrast = Color(0xFFFFFFFF)
val inversePrimaryLightHighContrast = Color(0xFFE7EBFF)
val surfaceDimLightHighContrast = Color(0xFFD9D9E2)
val surfaceBrightLightHighContrast = Color(0xFFFAF8FF)
val surfaceContainerLowestLightHighContrast = Color(0xFFFFFFFF)
val surfaceContainerLowLightHighContrast = Color(0xFFF3F3FB)
val surfaceContainerLightHighContrast = Color(0xFFEDEDF5)
val surfaceContainerHighLightHighContrast = Color(0xFFE8E7F0)
val surfaceContainerHighestLightHighContrast = Color(0xFFE2E2EA)

val primaryDark = Color(0xFFB0C6FF)
val onPrimaryDark = Color(0xFF002C6F)
val primaryContainerDark = Color(0xFF003889)
val onPrimaryContainerDark = Color(0xFFBFD0FF)
val secondaryDark = Color(0xFFBBC6E9)
val onSecondaryDark = Color(0xFF25304B)
val secondaryContainerDark = Color(0xFF323D59)
val onSecondaryContainerDark = Color(0xFFC5D0F4)
val tertiaryDark = Color(0xFFEEB0FF)
val onTertiaryDark = Color(0xFF510B68)
val tertiaryContainerDark = Color(0xFF601F77)
val onTertiaryContainerDark = Color(0xFFF3C1FF)
val errorDark = Color(0xFFFFB4AB)
val onErrorDark = Color(0xFF690005)
val errorContainerDark = Color(0xFF93000A)
val onErrorContainerDark = Color(0xFFFFDAD6)
val backgroundDark = Color(0xFF111319)
val onBackgroundDark = Color(0xFFE2E2EA)
val surfaceDark = Color(0xFF111319)
val onSurfaceDark = Color(0xFFE2E2EA)
val surfaceVariantDark = Color(0xFF434652)
val onSurfaceVariantDark = Color(0xFFC3C6D4)
val outlineDark = Color(0xFF8D909D)
val outlineVariantDark = Color(0xFF434652)
val scrimDark = Color(0xFF000000)
val inverseSurfaceDark = Color(0xFFE2E2EA)
val inverseOnSurfaceDark = Color(0xFF2E3036)
val inversePrimaryDark = Color(0xFF2C5AB5)
val surfaceDimDark = Color(0xFF111319)
val surfaceBrightDark = Color(0xFF37393F)
val surfaceContainerLowestDark = Color(0xFF0C0E14)
val surfaceContainerLowDark = Color(0xFF1A1B21)
val surfaceContainerDark = Color(0xFF1E1F25)
val surfaceContainerHighDark = Color(0xFF282A30)
val surfaceContainerHighestDark = Color(0xFF33343B)

val primaryDarkMediumContrast = Color(0xFFB7CAFF)
val onPrimaryDarkMediumContrast = Color(0xFF00143B)
val primaryContainerDarkMediumContrast = Color(0xFF658EEC)
val onPrimaryContainerDarkMediumContrast = Color(0xFF000000)
val secondaryDarkMediumContrast = Color(0xFFBFCAED)
val onSecondaryDarkMediumContrast = Color(0xFF091530)
val secondaryContainerDarkMediumContrast = Color(0xFF8590B1)
val onSecondaryContainerDarkMediumContrast = Color(0xFF000000)
val tertiaryDarkMediumContrast = Color(0xFFF0B6FF)
val onTertiaryDarkMediumContrast = Color(0xFF2B003A)
val tertiaryContainerDarkMediumContrast = Color(0xFFBC75D2)
val onTertiaryContainerDarkMediumContrast = Color(0xFF000000)
val errorDarkMediumContrast = Color(0xFFFFBAB1)
val onErrorDarkMediumContrast = Color(0xFF370001)
val errorContainerDarkMediumContrast = Color(0xFFFF5449)
val onErrorContainerDarkMediumContrast = Color(0xFF000000)
val backgroundDarkMediumContrast = Color(0xFF111319)
val onBackgroundDarkMediumContrast = Color(0xFFE2E2EA)
val surfaceDarkMediumContrast = Color(0xFF111319)
val onSurfaceDarkMediumContrast = Color(0xFFFCFAFF)
val surfaceVariantDarkMediumContrast = Color(0xFF434652)
val onSurfaceVariantDarkMediumContrast = Color(0xFFC7CAD8)
val outlineDarkMediumContrast = Color(0xFF9FA2B0)
val outlineVariantDarkMediumContrast = Color(0xFF808390)
val scrimDarkMediumContrast = Color(0xFF000000)
val inverseSurfaceDarkMediumContrast = Color(0xFFE2E2EA)
val inverseOnSurfaceDarkMediumContrast = Color(0xFF282A30)
val inversePrimaryDarkMediumContrast = Color(0xFF04439E)
val surfaceDimDarkMediumContrast = Color(0xFF111319)
val surfaceBrightDarkMediumContrast = Color(0xFF37393F)
val surfaceContainerLowestDarkMediumContrast = Color(0xFF0C0E14)
val surfaceContainerLowDarkMediumContrast = Color(0xFF1A1B21)
val surfaceContainerDarkMediumContrast = Color(0xFF1E1F25)
val surfaceContainerHighDarkMediumContrast = Color(0xFF282A30)
val surfaceContainerHighestDarkMediumContrast = Color(0xFF33343B)

val primaryDarkHighContrast = Color(0xFFFCFAFF)
val onPrimaryDarkHighContrast = Color(0xFF000000)
val primaryContainerDarkHighContrast = Color(0xFFB7CAFF)
val onPrimaryContainerDarkHighContrast = Color(0xFF000000)
val secondaryDarkHighContrast = Color(0xFFFCFAFF)
val onSecondaryDarkHighContrast = Color(0xFF000000)
val secondaryContainerDarkHighContrast = Color(0xFFBFCAED)
val onSecondaryContainerDarkHighContrast = Color(0xFF000000)
val tertiaryDarkHighContrast = Color(0xFFFFF9FA)
val onTertiaryDarkHighContrast = Color(0xFF000000)
val tertiaryContainerDarkHighContrast = Color(0xFFF0B6FF)
val onTertiaryContainerDarkHighContrast = Color(0xFF000000)
val errorDarkHighContrast = Color(0xFFFFF9F9)
val onErrorDarkHighContrast = Color(0xFF000000)
val errorContainerDarkHighContrast = Color(0xFFFFBAB1)
val onErrorContainerDarkHighContrast = Color(0xFF000000)
val backgroundDarkHighContrast = Color(0xFF111319)
val onBackgroundDarkHighContrast = Color(0xFFE2E2EA)
val surfaceDarkHighContrast = Color(0xFF111319)
val onSurfaceDarkHighContrast = Color(0xFFFFFFFF)
val surfaceVariantDarkHighContrast = Color(0xFF434652)
val onSurfaceVariantDarkHighContrast = Color(0xFFFCFAFF)
val outlineDarkHighContrast = Color(0xFFC7CAD8)
val outlineVariantDarkHighContrast = Color(0xFFC7CAD8)
val scrimDarkHighContrast = Color(0xFF000000)
val inverseSurfaceDarkHighContrast = Color(0xFFE2E2EA)
val inverseOnSurfaceDarkHighContrast = Color(0xFF000000)
val inversePrimaryDarkHighContrast = Color(0xFF002663)
val surfaceDimDarkHighContrast = Color(0xFF111319)
val surfaceBrightDarkHighContrast = Color(0xFF37393F)
val surfaceContainerLowestDarkHighContrast = Color(0xFF0C0E14)
val surfaceContainerLowDarkHighContrast = Color(0xFF1A1B21)
val surfaceContainerDarkHighContrast = Color(0xFF1E1F25)
val surfaceContainerHighDarkHighContrast = Color(0xFF282A30)
val surfaceContainerHighestDarkHighContrast = Color(0xFF33343B)


val moodColorPaletteMap: Map<Mood, MoodColor> = mapOf(
    Mood.STRESSED to MoodColor(
        darkColor = Color(0XFFDE3A3A),
        lightColor = Color(0XFFE9C5C5),
        lightBgColor = Color(0XFFF8EFEF)
    ),
    Mood.SAD to MoodColor(
        darkColor = Color(0XFF3A8EDE),
        lightColor = Color(0XFFC5D8E9),
        lightBgColor = Color(0XFFEFF4F8)
    ),
    Mood.NEUTRAL to MoodColor(
        darkColor = Color(0XFF41B278),
        lightColor = Color(0XFFB9DDCB),
        lightBgColor = Color(0XFFEEF7F3)
    ),
    Mood.PEACEFUL to MoodColor(
        darkColor = Color(0XFFBE3294),
        lightColor = Color(0XFFE1CEDB),
        lightBgColor = Color(0XFFF6F2F5)
    ),
    Mood.EXCITED to MoodColor(
        darkColor = Color(0XFFDB6C0B),
        lightColor = Color(0XFFDDD2C8),
        lightBgColor = Color(0XFFF5F2EF)
    )
)

data class MoodColor(
    val darkColor: Color,
    val lightColor: Color,
    val lightBgColor: Color
)


